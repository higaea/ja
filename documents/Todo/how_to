###Tech Requirement
    1. how to get user's different permissions
    2. instagram_content_publish is only available for IG partner? 
        Yes, it's only avaialbe for IG partner. Not sure if we could apply for the partner relationship.
    3. Try to apply a IG partner


###TODO list
1. set up a webhook to notifications for testing
2. set up a few dev account to test IG app
3. use a app in dev account
4. go through facebook login doc
5. how to use the app in FB, IG? Is it a Website or Smart Phone App?, or is it a FB Tab? or is it a FB tool in FB page?
6. What if user only has a IG account. In such case, could the user use FB login API???


### Need to discuss
1. a CA signed certificate (done)
2. login using FB account, IG account?
3. use case? How to use the H5, app?
    A. Users visit our H5 or website, and login with facebook(or IG account???)
    B. During login with their facebook account, they will be asked to grant for a few permissions. After they login, we could get thier access_token.
    C. Users go to their IG, post a photo, and @Jarton in comments or caption.
    D. Our app webhook gets the notifications and retrieve the Photo ID.
    E. We use facebook Graph API with Photo ID and access_token to get the Photo url
    F. Use AI to caption the Photo and get the caption result.
    G. We use facebook Graph API to post a comment on User's photo with the caption result.


### Need Discuss
1. how to display the images in screens? use the existing client or use jarton.cn?

目前facebook开发平台的公司认证进度比较慢，已经提交了两周，还没有完成
另外开发的app也需要facebook的审核才能使用用户的相应权限。
目前从开发者社区上看到用户权限使用的审核可能更慢一些。
还有就是Instagram目前没有发送照片的API，只有beta版，针对内部partner做公测，没有对外开放。
基于这些限制，目前要和Instagram用户互动，可行的方案是这样的，大家看一下：
1. Instagram用户扫码关注公司账号
2. 我们在Instagram公司账号上面发帖子，说明活动规则，提供上传图片的链接
3. Instagram用户登录链接，用自己ID完成注册，上传照片
4. 照片审核后，系统完成图片Caption，
5. 后台系统在上面的帖子的评论处，@图片的用户，提供caption内容



1. 梳理整体流程
2. 后台服务架构图，docker+k8s
3. 接口结构定义
4. 图片上传，展示的效率问题
5. 图片存贮位置，CDN，云？

1. need to make whole photo flow work
2. whether caption docker provides ws or restful API to upload the photo, and get the caption result?
3. asynchronizely calls caption server
4. image service(upload image, audit image and trigger worker service), worker service (triggered by image service, and calls caption service, and poll the result)
    caption service, user service(user login, return user's images list). 

1. need to create an endpoint to set instagram access_token to server, or update the access_token automatically?:w
2. need to create an endpoint to get the media object from instagram
3. need to test the performance of update image API, make multiple request at the same time
4. need a timer to poll the database, find all the records with imageCaptionId but without caption, and try to get caption again


1. image status change: new --> reviewed --> captioning --> captioned --> deleted
2. image should have createdOn, updatedOn
3. start a timer to get all the reviewed images, and request nn to caption. After caption is ready, callback is invoked and update the images's status and caption
4. always return image id, status, caption, url when getuserimages api is called
5. user should have a column to indicate whether it's from instagram. (TODO: need to handle the situation that instagram user name is used by other user?)
6. introduce redis to cache all the user name and user source, so that we don't need query mongo for each request. Redis key is name_source.
7. sort image list by updatedOn order by desc
8. create a docker for app
9. ali oos? image service to process images?
10. a main page to display images randamly in real time?


1. user count, image count, 
2. admin: images list, new / created 
3. admin: update image status
4. user images list, only captioned images//TODO user's images first, then other users images
5. image details
6. image upload
7. use openid/instagram username to get user details including source.

